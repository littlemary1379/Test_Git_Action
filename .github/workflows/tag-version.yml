name: Taging Version Code

on:
  push:
    branches:
      # 최종적으로 배포되는 배포 브랜치로 설정해주시면 됩니당 :D
      - master

jobs:
  tag:
    runs-on: ubuntu-latest

    steps:
      # 최신 소스코드를 체크아웃 합니다! fetch-depth를 통해 설정된 브랜치의 깊이를 2까지 탐색합니다.
      - name: Check code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      # yq 는 yaml을 파싱하기 위해 사용되는 도구입니다. 현재 코드에서는 yaml version code를 읽어오기 위해 사용합니다.
      - name: Install yq
        run: |
          # Download yq binary
          YQ_VERSION=v4.33.2
          wget https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/yq_linux_amd64 -O /usr/local/bin/yq
          chmod +x /usr/local/bin/yq

      # Head~1과 Head의 코드 속 yaml 파일을 서치합니다.
      # 내부에 version이 있다면 IFS(split이라 생각하면 돼용.)를 통해 version code와 build number을 나눕니다.
      # version code가 다르다면 태그를 생성합니다. git tag "v${CURRENT_VERSION}-release" 로 기본으로 만들어놨는데, 입맛대로 수정하세용!
      - name: Create new tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Check version 
          PREVIOUS_VERSION_RAW=$(git show HEAD~1:pubspec.yaml | yq eval '.version')
          IFS='+' read -r PREVIOUS_VERSION PREVIOUS_VERSION_BUILD_NUMBER <<< "$PREVIOUS_VERSION_RAW"
          echo "PREVIOUS_VERSION: $PREVIOUS_VERSION"
          echo "PREVIOUS_VERSION_BUILD_NUMBER: $PREVIOUS_VERSION_BUILD_NUMBER"
          
          CURRENT_VERSION_RAW=$(yq eval '.version' pubspec.yaml)
          IFS='+' read -r CURRENT_VERSION CURRENT_VERSION_BUILD_NUMBER <<< "$CURRENT_VERSION_RAW"
          echo "CURRENT_VERSION: $CURRENT_VERSION"
          echo "CURRENT_VERSION_BUILD_NUMBER: $CURRENT_VERSION_BUILD_NUMBER"
          
          if [[ "$PREVIOUS_VERSION" == "$CURRENT_VERSION" ]]; then
            echo "version same"
          else
            echo "version change"
            git tag "v${CURRENT_VERSION}-release"
            git push origin --tags
          fi